{"remainingRequest":"/Users/zhen/Documents/doc-zhen/docs-rancher2/node_modules/babel-loader/lib/index.js??ref--4-1!/Users/zhen/Documents/doc-zhen/docs-rancher2/node_modules/@docusaurus/core/lib/client/preload.js","dependencies":[{"path":"/Users/zhen/Documents/doc-zhen/docs-rancher2/node_modules/@docusaurus/core/lib/client/preload.js","mtime":1609137261284},{"path":"/Users/zhen/Documents/doc-zhen/docs-rancher2/node_modules/cache-loader/dist/cjs.js","mtime":1609137261764},{"path":"/Users/zhen/Documents/doc-zhen/docs-rancher2/node_modules/babel-loader/lib/index.js","mtime":1609137261731}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLml0ZXJhYmxlIjsvKioKICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuCiAqCiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZQogKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuCiAqL2ltcG9ydHttYXRjaFJvdXRlc31mcm9tJ3JlYWN0LXJvdXRlci1jb25maWcnOy8qKgogKiBIZWxwZXIgZnVuY3Rpb24gdG8gbWFrZSBzdXJlIGFsbCBhc3luYyBjb21wb25lbnRzIGZvciB0aGF0IHBhcnRpY3VsYXIgcm91dGUKICogaXMgcHJlbG9hZGVkIGJlZm9yZSByZW5kZXJpbmcuIFRoaXMgaXMgZXNwZWNpYWxseSB1c2VmdWwgdG8gYXZvaWQgbG9hZGluZyBzY3JlZW5zLgogKgogKiBAcGFyYW0ge0FycmF5PFJvdXRlQ29uZmlnPn0gcm91dGVzIHJlYWN0LXJvdXRlci1jb25maWcKICogQHBhcmFtIHtzdHJpbmd9IHBhdGhuYW1lIHRoZSByb3V0ZSBwYXRobmFtZSwgZXhhbXBsZTogL2RvY3MvaW5zdGFsbGF0aW9uCiAqIEByZXR1cm5zIHtQcm9taXNlfSBQcm9taXNlIG9iamVjdCByZXByZXNlbnRzIHdoZXRoZXIgcGF0aG5hbWUgaGFzIGJlZW4gcHJlbG9hZGVkCiAqL2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHByZWxvYWQocm91dGVzLHBhdGhuYW1lKXtjb25zdCBtYXRjaGVzPW1hdGNoUm91dGVzKHJvdXRlcyxwYXRobmFtZSk7cmV0dXJuIFByb21pc2UuYWxsKG1hdGNoZXMubWFwKG1hdGNoPT57Y29uc3R7Y29tcG9uZW50fT1tYXRjaC5yb3V0ZTtpZihjb21wb25lbnQmJmNvbXBvbmVudC5wcmVsb2FkKXtyZXR1cm4gY29tcG9uZW50LnByZWxvYWQoKTt9cmV0dXJuIHVuZGVmaW5lZDt9KSk7fQ=="},{"version":3,"sources":["/Users/zhen/Documents/doc-zhen/docs-rancher2/node_modules/@docusaurus/core/lib/client/preload.js"],"names":["matchRoutes","preload","routes","pathname","matches","Promise","all","map","match","component","route","undefined"],"mappings":"yCAAA;;;;;GAOA,OAAQA,WAAR,KAA0B,qBAA1B,CAEA;;;;;;;GAQA,cAAe,SAASC,CAAAA,OAAT,CAAiBC,MAAjB,CAAyBC,QAAzB,CAAmC,CAChD,KAAMC,CAAAA,OAAO,CAAGJ,WAAW,CAACE,MAAD,CAASC,QAAT,CAA3B,CAEA,MAAOE,CAAAA,OAAO,CAACC,GAAR,CACLF,OAAO,CAACG,GAAR,CAAYC,KAAK,EAAI,CACnB,KAAM,CAACC,SAAD,EAAcD,KAAK,CAACE,KAA1B,CAEA,GAAID,SAAS,EAAIA,SAAS,CAACR,OAA3B,CAAoC,CAClC,MAAOQ,CAAAA,SAAS,CAACR,OAAV,EAAP,CACD,CAED,MAAOU,CAAAA,SAAP,CACD,CARD,CADK,CAAP,CAWD","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {matchRoutes} from 'react-router-config';\n\n/**\n * Helper function to make sure all async components for that particular route\n * is preloaded before rendering. This is especially useful to avoid loading screens.\n *\n * @param {Array<RouteConfig>} routes react-router-config\n * @param {string} pathname the route pathname, example: /docs/installation\n * @returns {Promise} Promise object represents whether pathname has been preloaded\n */\nexport default function preload(routes, pathname) {\n  const matches = matchRoutes(routes, pathname);\n\n  return Promise.all(\n    matches.map(match => {\n      const {component} = match.route;\n\n      if (component && component.preload) {\n        return component.preload();\n      }\n\n      return undefined;\n    }),\n  );\n}\n"]}]}