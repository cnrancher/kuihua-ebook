{"remainingRequest":"/Users/zhen/Documents/doc-zhen/kuihua-ebook/node_modules/babel-loader/lib/index.js??ref--4-1!/Users/zhen/Documents/doc-zhen/kuihua-ebook/node_modules/@docusaurus/core/lib/client/docusaurus.js","dependencies":[{"path":"/Users/zhen/Documents/doc-zhen/kuihua-ebook/node_modules/@docusaurus/core/lib/client/docusaurus.js","mtime":1609144577851},{"path":"/Users/zhen/Documents/doc-zhen/kuihua-ebook/node_modules/cache-loader/dist/cjs.js","mtime":1609144572580},{"path":"/Users/zhen/Documents/doc-zhen/kuihua-ebook/node_modules/babel-loader/lib/index.js","mtime":1609144578404}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLml0ZXJhYmxlIjsvKioKICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuCiAqCiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZQogKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuCiAqL2ltcG9ydHttYXRjaFJvdXRlc31mcm9tJ3JlYWN0LXJvdXRlci1jb25maWcnO2ltcG9ydCByb3V0ZXNDaHVua05hbWVzIGZyb20nQGdlbmVyYXRlZC9yb3V0ZXNDaHVua05hbWVzJztpbXBvcnQgcm91dGVzIGZyb20nQGdlbmVyYXRlZC9yb3V0ZXMnO2ltcG9ydCBwcmVmZXRjaEhlbHBlciBmcm9tJy4vcHJlZmV0Y2gnO2ltcG9ydCBwcmVsb2FkSGVscGVyIGZyb20nLi9wcmVsb2FkJztpbXBvcnQgZmxhdCBmcm9tJy4vZmxhdCc7Y29uc3QgZmV0Y2hlZD17fTtjb25zdCBsb2FkZWQ9e307Y29uc3QgaXNTbG93Q29ubmVjdGlvbj0oKT0+ey8vIElmIHVzZXIgaXMgb24gc2xvdyBvciBjb25zdHJhaW5lZCBjb25uZWN0aW9uLgppZihgY29ubmVjdGlvbmBpbiBuYXZpZ2F0b3Ipe2lmKChuYXZpZ2F0b3IuY29ubmVjdGlvbi5lZmZlY3RpdmVUeXBlfHxgYCkuaW5kZXhPZihgMmdgKSE9PS0xJiZuYXZpZ2F0b3IuY29ubmVjdGlvbi5zYXZlRGF0YSl7cmV0dXJuIHRydWU7fX1yZXR1cm4gZmFsc2U7fTtjb25zdCBjYW5QcmVmZXRjaD1yb3V0ZVBhdGg9PiFpc1Nsb3dDb25uZWN0aW9uKCkmJiFsb2FkZWRbcm91dGVQYXRoXSYmIWZldGNoZWRbcm91dGVQYXRoXTtjb25zdCBjYW5QcmVsb2FkPXJvdXRlUGF0aD0+IWlzU2xvd0Nvbm5lY3Rpb24oKSYmIWxvYWRlZFtyb3V0ZVBhdGhdO2NvbnN0IGRvY3VzYXVydXM9e3ByZWZldGNoOnJvdXRlUGF0aD0+e2lmKCFjYW5QcmVmZXRjaChyb3V0ZVBhdGgpKXtyZXR1cm4gZmFsc2U7fS8vIFByZXZlbnQgZnV0dXJlIGR1cGxpY2F0ZSBwcmVmZXRjaCBvZiByb3V0ZVBhdGguCmZldGNoZWRbcm91dGVQYXRoXT10cnVlOy8vIEZpbmQgYWxsIHdlYnBhY2sgY2h1bmsgbmFtZXMgbmVlZGVkLgpjb25zdCBtYXRjaGVzPW1hdGNoUm91dGVzKHJvdXRlcyxyb3V0ZVBhdGgpO2NvbnN0IGNodW5rTmFtZXNOZWVkZWQ9bWF0Y2hlcy5yZWR1Y2UoKGFycixtYXRjaCk9Pntjb25zdCBjaHVuaz1yb3V0ZXNDaHVua05hbWVzW21hdGNoLnJvdXRlLnBhdGhdO2lmKCFjaHVuayl7cmV0dXJuIGFycjt9Y29uc3QgY2h1bmtOYW1lcz1PYmplY3QudmFsdWVzKGZsYXQoY2h1bmspKTtyZXR1cm4gYXJyLmNvbmNhdChjaHVua05hbWVzKTt9LFtdKTsvLyBQcmVmZXRjaCBhbGwgd2VicGFjayBjaHVuayBhc3NldHMgZmlsZSBuZWVkZWQuCmNodW5rTmFtZXNOZWVkZWQuZm9yRWFjaChjaHVua05hbWU9PnsvLyAiX193ZWJwYWNrX3JlcXVpcmVfXy5nY2EiIGlzIGEgY3VzdG9tIGZ1bmN0aW9uIHByb3ZpZGVkIGJ5IENodW5rQXNzZXRQbHVnaW4uCi8vIFBhc3MgaXQgdGhlIGNodW5rTmFtZSBvciBjaHVua0lkIHlvdSB3YW50IHRvIGxvYWQgYW5kIGl0IHdpbGwgcmV0dXJuIHRoZSBVUkwgZm9yIHRoYXQgY2h1bmsuCi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZgpjb25zdCBjaHVua0Fzc2V0PV9fd2VicGFja19yZXF1aXJlX18uZ2NhKGNodW5rTmFtZSk7Ly8gSW4gc29tZSBjYXNlcywgd2VicGFjayBtaWdodCBkZWNpZGUgdG8gb3B0aW1pemUgZnVydGhlciAmIGhlbmNlIHRoZSBjaHVuayBhc3NldHMgYXJlIG1lcmdlZCB0byBhbm90aGVyIGNodW5rL3ByZXZpb3VzIGNodW5rLgovLyBIZW5jZSwgd2UgY2FuIHNhZmVseSBmaWx0ZXIgaXQgb3V0L2Rvbid0IG5lZWQgdG8gbG9hZCBpdC4KaWYoY2h1bmtBc3NldCYmIS91bmRlZmluZWQvLnRlc3QoY2h1bmtBc3NldCkpe3ByZWZldGNoSGVscGVyKGNodW5rQXNzZXQpO319KTtyZXR1cm4gdHJ1ZTt9LHByZWxvYWQ6cm91dGVQYXRoPT57aWYoIWNhblByZWxvYWQocm91dGVQYXRoKSl7cmV0dXJuIGZhbHNlO31sb2FkZWRbcm91dGVQYXRoXT10cnVlO3ByZWxvYWRIZWxwZXIocm91dGVzLHJvdXRlUGF0aCk7cmV0dXJuIHRydWU7fX07ZXhwb3J0IGRlZmF1bHQgZG9jdXNhdXJ1czs="},{"version":3,"sources":["/Users/zhen/Documents/doc-zhen/kuihua-ebook/node_modules/@docusaurus/core/lib/client/docusaurus.js"],"names":["matchRoutes","routesChunkNames","routes","prefetchHelper","preloadHelper","flat","fetched","loaded","isSlowConnection","navigator","connection","effectiveType","indexOf","saveData","canPrefetch","routePath","canPreload","docusaurus","prefetch","matches","chunkNamesNeeded","reduce","arr","match","chunk","route","path","chunkNames","Object","values","concat","forEach","chunkName","chunkAsset","__webpack_require__","gca","test","preload"],"mappings":"yCAAA;;;;;GAMA,OAAQA,WAAR,KAA0B,qBAA1B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,6BAA7B,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,cAAP,KAA2B,YAA3B,CACA,MAAOC,CAAAA,aAAP,KAA0B,WAA1B,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CAEA,KAAMC,CAAAA,OAAO,CAAG,EAAhB,CACA,KAAMC,CAAAA,MAAM,CAAG,EAAf,CAEA,KAAMC,CAAAA,gBAAgB,CAAG,IAAM,CAC7B;AACA,GAAK,YAAD,EAAgBC,CAAAA,SAApB,CAA+B,CAC7B,GACE,CAACA,SAAS,CAACC,UAAV,CAAqBC,aAArB,EAAuC,EAAxC,EAA2CC,OAA3C,CAAoD,IAApD,IAA6D,CAAC,CAA9D,EACAH,SAAS,CAACC,UAAV,CAAqBG,QAFvB,CAGE,CACA,MAAO,KAAP,CACD,CACF,CACD,MAAO,MAAP,CACD,CAXD,CAaA,KAAMC,CAAAA,WAAW,CAAGC,SAAS,EAC3B,CAACP,gBAAgB,EAAjB,EAAuB,CAACD,MAAM,CAACQ,SAAD,CAA9B,EAA6C,CAACT,OAAO,CAACS,SAAD,CADvD,CAGA,KAAMC,CAAAA,UAAU,CAAGD,SAAS,EAAI,CAACP,gBAAgB,EAAjB,EAAuB,CAACD,MAAM,CAACQ,SAAD,CAA9D,CAEA,KAAME,CAAAA,UAAU,CAAG,CACjBC,QAAQ,CAAEH,SAAS,EAAI,CACrB,GAAI,CAACD,WAAW,CAACC,SAAD,CAAhB,CAA6B,CAC3B,MAAO,MAAP,CACD,CACD;AACAT,OAAO,CAACS,SAAD,CAAP,CAAqB,IAArB,CAEA;AACA,KAAMI,CAAAA,OAAO,CAAGnB,WAAW,CAACE,MAAD,CAASa,SAAT,CAA3B,CACA,KAAMK,CAAAA,gBAAgB,CAAGD,OAAO,CAACE,MAAR,CAAe,CAACC,GAAD,CAAMC,KAAN,GAAgB,CACtD,KAAMC,CAAAA,KAAK,CAAGvB,gBAAgB,CAACsB,KAAK,CAACE,KAAN,CAAYC,IAAb,CAA9B,CACA,GAAI,CAACF,KAAL,CAAY,CACV,MAAOF,CAAAA,GAAP,CACD,CAED,KAAMK,CAAAA,UAAU,CAAGC,MAAM,CAACC,MAAP,CAAcxB,IAAI,CAACmB,KAAD,CAAlB,CAAnB,CACA,MAAOF,CAAAA,GAAG,CAACQ,MAAJ,CAAWH,UAAX,CAAP,CACD,CARwB,CAQtB,EARsB,CAAzB,CAUA;AACAP,gBAAgB,CAACW,OAAjB,CAAyBC,SAAS,EAAI,CACpC;AACA;AACA;AACA,KAAMC,CAAAA,UAAU,CAAGC,mBAAmB,CAACC,GAApB,CAAwBH,SAAxB,CAAnB,CAEA;AACA;AACA,GAAIC,UAAU,EAAI,CAAC,YAAYG,IAAZ,CAAiBH,UAAjB,CAAnB,CAAiD,CAC/C9B,cAAc,CAAC8B,UAAD,CAAd,CACD,CACF,CAXD,EAaA,MAAO,KAAP,CACD,CAnCgB,CAqCjBI,OAAO,CAAEtB,SAAS,EAAI,CACpB,GAAI,CAACC,UAAU,CAACD,SAAD,CAAf,CAA4B,CAC1B,MAAO,MAAP,CACD,CAEDR,MAAM,CAACQ,SAAD,CAAN,CAAoB,IAApB,CACAX,aAAa,CAACF,MAAD,CAASa,SAAT,CAAb,CACA,MAAO,KAAP,CACD,CA7CgB,CAAnB,CAgDA,cAAeE,CAAAA,UAAf","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport {matchRoutes} from 'react-router-config';\nimport routesChunkNames from '@generated/routesChunkNames';\nimport routes from '@generated/routes';\nimport prefetchHelper from './prefetch';\nimport preloadHelper from './preload';\nimport flat from './flat';\n\nconst fetched = {};\nconst loaded = {};\n\nconst isSlowConnection = () => {\n  // If user is on slow or constrained connection.\n  if (`connection` in navigator) {\n    if (\n      (navigator.connection.effectiveType || ``).indexOf(`2g`) !== -1 &&\n      navigator.connection.saveData\n    ) {\n      return true;\n    }\n  }\n  return false;\n};\n\nconst canPrefetch = routePath =>\n  !isSlowConnection() && !loaded[routePath] && !fetched[routePath];\n\nconst canPreload = routePath => !isSlowConnection() && !loaded[routePath];\n\nconst docusaurus = {\n  prefetch: routePath => {\n    if (!canPrefetch(routePath)) {\n      return false;\n    }\n    // Prevent future duplicate prefetch of routePath.\n    fetched[routePath] = true;\n\n    // Find all webpack chunk names needed.\n    const matches = matchRoutes(routes, routePath);\n    const chunkNamesNeeded = matches.reduce((arr, match) => {\n      const chunk = routesChunkNames[match.route.path];\n      if (!chunk) {\n        return arr;\n      }\n\n      const chunkNames = Object.values(flat(chunk));\n      return arr.concat(chunkNames);\n    }, []);\n\n    // Prefetch all webpack chunk assets file needed.\n    chunkNamesNeeded.forEach(chunkName => {\n      // \"__webpack_require__.gca\" is a custom function provided by ChunkAssetPlugin.\n      // Pass it the chunkName or chunkId you want to load and it will return the URL for that chunk.\n      // eslint-disable-next-line no-undef\n      const chunkAsset = __webpack_require__.gca(chunkName);\n\n      // In some cases, webpack might decide to optimize further & hence the chunk assets are merged to another chunk/previous chunk.\n      // Hence, we can safely filter it out/don't need to load it.\n      if (chunkAsset && !/undefined/.test(chunkAsset)) {\n        prefetchHelper(chunkAsset);\n      }\n    });\n\n    return true;\n  },\n\n  preload: routePath => {\n    if (!canPreload(routePath)) {\n      return false;\n    }\n\n    loaded[routePath] = true;\n    preloadHelper(routes, routePath);\n    return true;\n  },\n};\n\nexport default docusaurus;\n"]}]}