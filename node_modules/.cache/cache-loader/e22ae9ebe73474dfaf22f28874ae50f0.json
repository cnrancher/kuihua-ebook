{"remainingRequest":"/Users/zhen/Documents/doc-zhen/kuihua-ebook-new/node_modules/babel-loader/lib/index.js??ref--4-1!/Users/zhen/Documents/doc-zhen/kuihua-ebook-new/node_modules/@docusaurus/theme-classic/src/theme/CodeBlock/index.js","dependencies":[{"path":"/Users/zhen/Documents/doc-zhen/kuihua-ebook-new/node_modules/@docusaurus/theme-classic/src/theme/CodeBlock/index.js","mtime":1609137487669},{"path":"/Users/zhen/Documents/doc-zhen/kuihua-ebook-new/node_modules/cache-loader/dist/cjs.js","mtime":1609137482435},{"path":"/Users/zhen/Documents/doc-zhen/kuihua-ebook-new/node_modules/babel-loader/lib/index.js","mtime":1609137488105}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/zhen/Documents/doc-zhen/kuihua-ebook-new/node_modules/@docusaurus/theme-classic/src/theme/CodeBlock/index.js"],"names":["React","useEffect","useState","useRef","classnames","Highlight","defaultProps","defaultTheme","Clipboard","rangeParser","useDocusaurusContext","useThemeContext","styles","highlightLinesRangeRegex","getHighlightDirectiveRegex","languages","comments","js","start","end","jsBlock","jsx","python","html","directives","join","commentPattern","map","lang","RegExp","highlightDirectiveRegex","codeBlockTitleRegex","children","className","languageClassName","metastring","siteConfig","themeConfig","prism","showCopied","setShowCopied","mounted","setMounted","target","button","highlightLines","codeBlockTitle","isDarkTheme","lightModeTheme","theme","darkModeTheme","darkTheme","prismTheme","test","highlightLinesRange","match","parse","filter","n","split","replace","clipboard","current","destroy","language","defaultLanguage","code","length","undefined","range","directiveRegex","lines","blockStart","index","line","lineNumber","directive","slice","reduce","final","item","splice","handleCopyCode","window","getSelection","empty","setTimeout","style","tokens","getLineProps","getTokenProps","codeBlockContent","copyButton","copyButtonWithTitle","codeBlock","codeBlockWithTitle","codeBlockLines","i","content","lineProps","key","includes","token"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n\nimport React, {useEffect, useState, useRef} from 'react';\nimport classnames from 'classnames';\nimport Highlight, {defaultProps} from 'prism-react-renderer';\nimport defaultTheme from 'prism-react-renderer/themes/palenight';\nimport Clipboard from 'clipboard';\nimport rangeParser from 'parse-numeric-range';\nimport useDocusaurusContext from '@docusaurus/useDocusaurusContext';\nimport useThemeContext from '@theme/hooks/useThemeContext';\n\nimport styles from './styles.module.css';\n\nconst highlightLinesRangeRegex = /{([\\d,-]+)}/;\nconst getHighlightDirectiveRegex = (\n  languages = ['js', 'jsBlock', 'jsx', 'python', 'html'],\n) => {\n  // supported types of comments\n  const comments = {\n    js: {\n      start: '\\\\/\\\\/',\n      end: '',\n    },\n    jsBlock: {\n      start: '\\\\/\\\\*',\n      end: '\\\\*\\\\/',\n    },\n    jsx: {\n      start: '\\\\{\\\\s*\\\\/\\\\*',\n      end: '\\\\*\\\\/\\\\s*\\\\}',\n    },\n    python: {\n      start: '#',\n      end: '',\n    },\n    html: {\n      start: '<!--',\n      end: '-->',\n    },\n  };\n  // supported directives\n  const directives = [\n    'highlight-next-line',\n    'highlight-start',\n    'highlight-end',\n  ].join('|');\n  // to be more reliable, the opening and closing comment must match\n  const commentPattern = languages\n    .map(\n      lang =>\n        `(?:${comments[lang].start}\\\\s*(${directives})\\\\s*${comments[lang].end})`,\n    )\n    .join('|');\n  // white space is allowed, but otherwise it should be on it's own line\n  return new RegExp(`^\\\\s*(?:${commentPattern})\\\\s*$`);\n};\n// select comment styles based on language\nconst highlightDirectiveRegex = lang => {\n  switch (lang) {\n    case 'js':\n    case 'javascript':\n    case 'ts':\n    case 'typescript':\n      return getHighlightDirectiveRegex(['js', 'jsBlock']);\n\n    case 'jsx':\n    case 'tsx':\n      return getHighlightDirectiveRegex(['js', 'jsBlock', 'jsx']);\n\n    case 'html':\n      return getHighlightDirectiveRegex(['js', 'jsBlock', 'html']);\n\n    case 'python':\n    case 'py':\n      return getHighlightDirectiveRegex(['python']);\n\n    default:\n      // all comment types\n      return getHighlightDirectiveRegex();\n  }\n};\nconst codeBlockTitleRegex = /title=\".*\"/;\n\nexport default ({children, className: languageClassName, metastring}) => {\n  const {\n    siteConfig: {\n      themeConfig: {prism = {}},\n    },\n  } = useDocusaurusContext();\n\n  const [showCopied, setShowCopied] = useState(false);\n  const [mounted, setMounted] = useState(false);\n  // The Prism theme on SSR is always the default theme but the site theme\n  // can be in a different mode. React hydration doesn't update DOM styles\n  // that come from SSR. Hence force a re-render after mounting to apply the\n  // current relevant styles. There will be a flash seen of the original\n  // styles seen using this current approach but that's probably ok. Fixing\n  // the flash will require changing the theming approach and is not worth it\n  // at this point.\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  const target = useRef(null);\n  const button = useRef(null);\n  let highlightLines = [];\n  let codeBlockTitle = '';\n\n  const {isDarkTheme} = useThemeContext();\n  const lightModeTheme = prism.theme || defaultTheme;\n  const darkModeTheme = prism.darkTheme || lightModeTheme;\n  const prismTheme = isDarkTheme ? darkModeTheme : lightModeTheme;\n\n  if (metastring && highlightLinesRangeRegex.test(metastring)) {\n    const highlightLinesRange = metastring.match(highlightLinesRangeRegex)[1];\n    highlightLines = rangeParser.parse(highlightLinesRange).filter(n => n > 0);\n  }\n\n  if (metastring && codeBlockTitleRegex.test(metastring)) {\n    codeBlockTitle = metastring\n      .match(codeBlockTitleRegex)[0]\n      .split('title=')[1]\n      .replace(/\"+/g, '');\n  }\n\n  useEffect(() => {\n    let clipboard;\n\n    if (button.current) {\n      clipboard = new Clipboard(button.current, {\n        target: () => target.current,\n      });\n    }\n\n    return () => {\n      if (clipboard) {\n        clipboard.destroy();\n      }\n    };\n  }, [button.current, target.current]);\n\n  let language =\n    languageClassName && languageClassName.replace(/language-/, '');\n\n  if (!language && prism.defaultLanguage) {\n    language = prism.defaultLanguage;\n  }\n\n  // only declaration OR directive highlight can be used for a block\n  let code = children.replace(/\\n$/, '');\n  if (highlightLines.length === 0 && language !== undefined) {\n    let range = '';\n    const directiveRegex = highlightDirectiveRegex(language);\n    // go through line by line\n    const lines = children.replace(/\\n$/, '').split('\\n');\n    let blockStart;\n    // loop through lines\n    for (let index = 0; index < lines.length; ) {\n      const line = lines[index];\n      // adjust for 0-index\n      const lineNumber = index + 1;\n      const match = line.match(directiveRegex);\n      if (match !== null) {\n        const directive = match\n          .slice(1)\n          .reduce((final, item) => final || item, undefined);\n        switch (directive) {\n          case 'highlight-next-line':\n            range += `${lineNumber},`;\n            break;\n\n          case 'highlight-start':\n            blockStart = lineNumber;\n            break;\n\n          case 'highlight-end':\n            range += `${blockStart}-${lineNumber - 1},`;\n            break;\n\n          default:\n            break;\n        }\n        lines.splice(index, 1);\n      } else {\n        // lines without directives are unchanged\n        index += 1;\n      }\n    }\n    highlightLines = rangeParser.parse(range);\n    code = lines.join('\\n');\n  }\n\n  const handleCopyCode = () => {\n    window.getSelection().empty();\n    setShowCopied(true);\n\n    setTimeout(() => setShowCopied(false), 2000);\n  };\n\n  return (\n    <Highlight\n      {...defaultProps}\n      key={mounted}\n      theme={prismTheme}\n      code={code}\n      language={language}>\n      {({className, style, tokens, getLineProps, getTokenProps}) => (\n        <>\n          {codeBlockTitle && (\n            <div style={style} className={styles.codeBlockTitle}>\n              {codeBlockTitle}\n            </div>\n          )}\n          <div className={styles.codeBlockContent}>\n            <button\n              ref={button}\n              type=\"button\"\n              aria-label=\"Copy code to clipboard\"\n              className={classnames(styles.copyButton, {\n                [styles.copyButtonWithTitle]: codeBlockTitle,\n              })}\n              onClick={handleCopyCode}>\n              {showCopied ? 'Copied' : 'Copy'}\n            </button>\n            <div\n              tabIndex=\"0\"\n              className={classnames(className, styles.codeBlock, {\n                [styles.codeBlockWithTitle]: codeBlockTitle,\n              })}>\n              <div ref={target} className={styles.codeBlockLines} style={style}>\n                {tokens.map((line, i) => {\n                  if (line.length === 1 && line[0].content === '') {\n                    line[0].content = '\\n'; // eslint-disable-line no-param-reassign\n                  }\n\n                  const lineProps = getLineProps({line, key: i});\n\n                  if (highlightLines.includes(i + 1)) {\n                    lineProps.className = `${lineProps.className} docusaurus-highlight-code-line`;\n                  }\n\n                  return (\n                    <div key={i} {...lineProps}>\n                      {line.map((token, key) => (\n                        <span key={key} {...getTokenProps({token, key})} />\n                      ))}\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </Highlight>\n  );\n};\n"]}]}