{"remainingRequest":"/Users/zhen/Documents/doc-zhen/kuihua-ebook-new/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/zhen/Documents/doc-zhen/kuihua-ebook-new/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/zhen/Documents/doc-zhen/kuihua-ebook-new/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/zhen/Documents/doc-zhen/kuihua-ebook-new/docs/rancher2/monitoring-alerting/2.0-2.4/cluster-monitoring/custom-metrics/_index.md","dependencies":[{"path":"/Users/zhen/Documents/doc-zhen/kuihua-ebook-new/docs/rancher2/monitoring-alerting/2.0-2.4/cluster-monitoring/custom-metrics/_index.md","mtime":1609137490680},{"path":"/Users/zhen/Documents/doc-zhen/kuihua-ebook-new/.docusaurus/docusaurus-plugin-content-docs/site-docs-rancher-2-monitoring-alerting-2-0-2-4-cluster-monitoring-custom-metrics-index-md-a65.json","mtime":1609140319385},{"path":"/Users/zhen/Documents/doc-zhen/kuihua-ebook-new/node_modules/cache-loader/dist/cjs.js","mtime":1609137482435},{"path":"/Users/zhen/Documents/doc-zhen/kuihua-ebook-new/node_modules/babel-loader/lib/index.js","mtime":1609137488105},{"path":"/Users/zhen/Documents/doc-zhen/kuihua-ebook-new/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1609137487644},{"path":"/Users/zhen/Documents/doc-zhen/kuihua-ebook-new/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1609137487714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/zhen/Documents/doc-zhen/kuihua-ebook-new/docs/rancher2/monitoring-alerting/2.0-2.4/cluster-monitoring/custom-metrics/_index.md"],"names":["React","mdx","frontMatter","title","metadata","rightToc","value","id","children","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\ttitle: 'Prometheus自定义监控指标适配器'\n};\nexport const metadata = {\n  \"id\": \"rancher2/monitoring-alerting/2.0-2.4/cluster-monitoring/custom-metrics/_index\",\n  \"title\": \"Prometheus自定义监控指标适配器\",\n  \"description\": \"启用了[集群层级的监控](/docs/rancher2/cluster-admin/tools/monitoring/_index)以后，您可以查看 Rancher 的监控指标。您也可以部署 Prometheus 自定义监控指标适配器，然后配合储存在集群内的监控指标，使用 HPA。\",\n  \"source\": \"@site/docs/rancher2/monitoring-alerting/2.0-2.4/cluster-monitoring/custom-metrics/_index.md\",\n  \"permalink\": \"/docs/rancher2/monitoring-alerting/2.0-2.4/cluster-monitoring/custom-metrics/_index\",\n  \"editUrl\": \"https://github.com/cnrancher/docs-rancher2/edit/master/docs/rancher2/monitoring-alerting/2.0-2.4/cluster-monitoring/custom-metrics/_index.md\",\n  \"lastUpdatedBy\": \"Author\",\n  \"lastUpdatedAt\": 1539502055\n};\n  /* @jsx mdx */\n\nexport const rightToc = [{\n  value: '部署 Prometheus 自定义监控指标适配器',\n  id: '部署-prometheus-自定义监控指标适配器',\n  children: []\n}, {\n  value: '配置 Prometheus 自定义监控指标适配器',\n  id: '配置-prometheus-自定义监控指标适配器',\n  children: [{\n    value: '服务发现（Discovery）',\n    id: '服务发现（discovery）',\n    children: []\n  }, {\n    value: '关联（Association）',\n    id: '关联（association）',\n    children: []\n  }, {\n    value: '命名（Naming）',\n    id: '命名（naming）',\n    children: []\n  }, {\n    value: '查询（Querying）',\n    id: '查询（querying）',\n    children: []\n  }]\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`启用了`}<a parentName=\"p\" {...{\n        \"href\": \"/docs/rancher2/cluster-admin/tools/monitoring/_index\"\n      }}>{`集群层级的监控`}</a>{`以后，您可以查看 Rancher 的监控指标。您也可以部署 Prometheus 自定义监控指标适配器，然后配合储存在集群内的监控指标，使用 HPA。`}</p>\n    <h2 {...{\n      \"id\": \"部署-prometheus-自定义监控指标适配器\"\n    }}>{`部署 Prometheus 自定义监控指标适配器`}</h2>\n    <p>{`下文使用`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/DirectXMan12/k8s-prometheus-adapter/releases/tag/v0.5.0\"\n      }}>{`Prometheus 自定义监控指标适配器 v0.5.0`}</a>{`。这是一个`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/kubernetes-incubator/custom-metrics-apiserver\"\n      }}>{`自定义监控指标`}</a>{`示例。只有`}<strong parentName=\"p\">{`集群所有者`}</strong>{`才可以执行以下步骤。`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`获取集群监控使用的 service account，它应该已经配置了这个 workload ID：`}<inlineCode parentName=\"p\">{`statefulset:cattle-prometheus:prometheus-cluster-monitoring`}</inlineCode>{`。如果您没有自定义任何选项，service account 的名字应该是`}<inlineCode parentName=\"p\">{`cluster-monitoring`}</inlineCode>{`。`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`授予 service account 需要的两个权限。`}</p>\n        <p parentName=\"li\">{`一个角色是`}<inlineCode parentName=\"p\">{`kube-system`}</inlineCode>{`中的`}<inlineCode parentName=\"p\">{`extension-apiserver-authentication-reader`}</inlineCode>{`，您需要在`}<inlineCode parentName=\"p\">{`kube-system`}</inlineCode>{`创建一个`}<inlineCode parentName=\"p\">{`Rolebinding`}</inlineCode>{`。这个权限的作用是从`}<inlineCode parentName=\"p\">{`kube-system`}</inlineCode>{`的 config map 获取 api 集合器配置。`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-yaml\"\n          }}>{`apiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: custom-metrics-auth-reader\n  namespace: kube-system\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: extension-apiserver-authentication-reader\nsubjects:\n  - kind: ServiceAccount\n    name: cluster-monitoring\n    namespace: cattle-prometheus\n`}</code></pre>\n        <p parentName=\"li\">{`另一个角色是集群角色`}<inlineCode parentName=\"p\">{`system:auth-delegator`}</inlineCode>{`，您需要创建一个`}<inlineCode parentName=\"p\">{`ClusterRoleBinding`}</inlineCode>{`。这个权限的作用是允许代理身份认证和鉴权，以实现统一的身份认证和鉴权。`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-yaml\"\n          }}>{`apiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: custom-metrics:system:auth-delegator\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:auth-delegator\nsubjects:\n  - kind: ServiceAccount\n    name: cluster-monitoring\n    namespace: cattle-prometheus\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`创建自定义参数适配器的配置文件，以下代码是一个配置文件的示例。下一节会详细讲述如何完成该配置文件。`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-yaml\"\n          }}>{`apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: adapter-config\n  namespace: cattle-prometheus\ndata:\n  config.yaml: |\n    rules:\n    - seriesQuery: '{__name__=~\"^container_.*\",container_name!=\"POD\",namespace!=\"\",pod_name!=\"\"}'\n      seriesFilters: []\n      resources:\n        overrides:\n          namespace:\n            resource: namespace\n          pod_name:\n            resource: pod\n      name:\n        matches: ^container_(.*)_seconds_total$\n        as: \"\"\n      metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>,container_name!=\"POD\"}[1m])) by (<<.GroupBy>>)\n    - seriesQuery: '{__name__=~\"^container_.*\",container_name!=\"POD\",namespace!=\"\",pod_name!=\"\"}'\n      seriesFilters:\n      - isNot: ^container_.*_seconds_total$\n      resources:\n        overrides:\n          namespace:\n            resource: namespace\n          pod_name:\n            resource: pod\n      name:\n        matches: ^container_(.*)_total$\n        as: \"\"\n      metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>,container_name!=\"POD\"}[1m])) by (<<.GroupBy>>)\n    - seriesQuery: '{__name__=~\"^container_.*\",container_name!=\"POD\",namespace!=\"\",pod_name!=\"\"}'\n      seriesFilters:\n      - isNot: ^container_.*_total$\n      resources:\n        overrides:\n          namespace:\n            resource: namespace\n          pod_name:\n            resource: pod\n      name:\n        matches: ^container_(.*)$\n        as: \"\"\n      metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>,container_name!=\"POD\"}) by (<<.GroupBy>>)\n    - seriesQuery: '{namespace!=\"\",__name__!~\"^container_.*\"}'\n      seriesFilters:\n      - isNot: .*_total$\n      resources:\n        template: <<.Resource>>\n      name:\n        matches: \"\"\n        as: \"\"\n      metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>}) by (<<.GroupBy>>)\n    - seriesQuery: '{namespace!=\"\",__name__!~\"^container_.*\"}'\n      seriesFilters:\n      - isNot: .*_seconds_total\n      resources:\n        template: <<.Resource>>\n      name:\n        matches: ^(.*)_total$\n        as: \"\"\n      metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>}[1m])) by (<<.GroupBy>>)\n    - seriesQuery: '{namespace!=\"\",__name__!~\"^container_.*\"}'\n      seriesFilters: []\n      resources:\n        template: <<.Resource>>\n      name:\n        matches: ^(.*)_seconds_total$\n        as: \"\"\n      metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>}[1m])) by (<<.GroupBy>>)\n    resourceRules:\n      cpu:\n        containerQuery: sum(rate(container_cpu_usage_seconds_total{<<.LabelMatchers>>}[1m])) by (<<.GroupBy>>)\n        nodeQuery: sum(rate(container_cpu_usage_seconds_total{<<.LabelMatchers>>, id='/'}[1m])) by (<<.GroupBy>>)\n        resources:\n          overrides:\n            instance:\n              resource: node\n            namespace:\n              resource: namespace\n            pod_name:\n              resource: pod\n        containerLabel: container_name\n      memory:\n        containerQuery: sum(container_memory_working_set_bytes{<<.LabelMatchers>>}) by (<<.GroupBy>>)\n        nodeQuery: sum(container_memory_working_set_bytes{<<.LabelMatchers>>,id='/'}) by (<<.GroupBy>>)\n        resources:\n          overrides:\n            instance:\n              resource: node\n            namespace:\n              resource: namespace\n            pod_name:\n              resource: pod\n        containerLabel: container_name\n      window: 1m\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`为您的 api server 创建 HTTPS TLS 证书。`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`openssl req -new -newkey rsa:4096 -x509 -sha256 -days 365 -nodes -out serving.crt -keyout serving.key -subj \"/C=CN/CN=custom-metrics-apiserver.cattle-prometheus.svc.cluster.local\"\n# And you will find serving.crt and serving.key in your path. And then you are going to create a secret in cattle-prometheus namespace.\nkubectl create secret generic -n cattle-prometheus cm-adapter-serving-certs --from-file=serving.key=./serving.key --from-file=serving.crt=./serving.crt\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`然后您可以创建 Prometheus 自定义监控指标适配器。部署前需要以导入 YAML 的方式创建一个服务。请在`}<inlineCode parentName=\"p\">{`cattle-prometheus`}</inlineCode>{`这个命名空间内创建以下资源。`}</p>\n        <p parentName=\"li\">{`以下是 Prometheus 自定义监控指标适配器的部署示例。`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-yaml\"\n          }}>{`apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: custom-metrics-apiserver\n  name: custom-metrics-apiserver\n  namespace: cattle-prometheus\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: custom-metrics-apiserver\n  template:\n    metadata:\n      labels:\n        app: custom-metrics-apiserver\n      name: custom-metrics-apiserver\n    spec:\n      serviceAccountName: cluster-monitoring\n      containers:\n        - name: custom-metrics-apiserver\n          image: directxman12/k8s-prometheus-adapter-amd64:v0.5.0\n          args:\n            - --secure-port=6443\n            - --tls-cert-file=/var/run/serving-cert/serving.crt\n            - --tls-private-key-file=/var/run/serving-cert/serving.key\n            - --logtostderr=true\n            - --prometheus-url=http://prometheus-operated/\n            - --metrics-relist-interval=1m\n            - --v=10\n            - --config=/etc/adapter/config.yaml\n          ports:\n            - containerPort: 6443\n          volumeMounts:\n            - mountPath: /var/run/serving-cert\n              name: volume-serving-cert\n              readOnly: true\n            - mountPath: /etc/adapter/\n              name: config\n              readOnly: true\n            - mountPath: /tmp\n              name: tmp-vol\n      volumes:\n        - name: volume-serving-cert\n          secret:\n            secretName: cm-adapter-serving-certs\n        - name: config\n          configMap:\n            name: adapter-config\n        - name: tmp-vol\n          emptyDir: {}\n`}</code></pre>\n        <p parentName=\"li\">{`以下是服务的部署示例。`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-yaml\"\n          }}>{`apiVersion: v1\nkind: Service\nmetadata:\n  name: custom-metrics-apiserver\n  namespace: cattle-prometheus\nspec:\n  ports:\n    - port: 443\n      targetPort: 6443\n  selector:\n    app: custom-metrics-apiserver\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`为您的自定义参数 server 创建 API service。`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-yaml\"\n          }}>{`apiVersion: apiregistration.k8s.io/v1beta1\nkind: APIService\nmetadata:\n  name: v1beta1.custom.metrics.k8s.io\nspec:\n  service:\n    name: custom-metrics-apiserver\n    namespace: cattle-prometheus\n  group: custom.metrics.k8s.io\n  version: v1beta1\n  insecureSkipTLSVerify: true\n  groupPriorityMinimum: 100\n  versionPriority: 100\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`在命令行界面输入`}<inlineCode parentName=\"p\">{`kubectl get --raw /apis/custom.metrics.k8s.io/v1beta1`}</inlineCode>{`命令，校验自定义参数 server 是否已经配置成功。如果从 api 返回了参数，则表示配置成功。`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`现在您可以使用自定义参数创建 HPA。首先您需要在命名空间中创建一个 NGINX 部署，以下是 HPA 的示例代码。`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-yaml\"\n          }}>{`kind: HorizontalPodAutoscaler\napiVersion: autoscaling/v2beta1\nmetadata:\n  name: nginx\nspec:\n  scaleTargetRef:\n    # point the HPA at the nginx deployment you just created\n    apiVersion: apps/v1\n    kind: Deployment\n    name: nginx\n  # autoscale between 1 and 10 replicas\n  minReplicas: 1\n  maxReplicas: 10\n  metrics:\n    # use a \"Pods\" metric, which takes the average of the\n    # given metric across all pods controlled by the autoscaling target\n    - type: Pods\n      pods:\n        metricName: memory_usage_bytes\n        targetAverageValue: 5000000\n`}</code></pre>\n        <p parentName=\"li\">{`然后，您的 NGINX 规模会变大，表示使用自定义参数创建的 HPA 开始运行。`}</p>\n      </li>\n    </ol>\n    <h2 {...{\n      \"id\": \"配置-prometheus-自定义监控指标适配器\"\n    }}>{`配置 Prometheus 自定义监控指标适配器`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`每一条规则都是独立执行的，所以请保证您配置的规则之间存在互斥关系，说明适配器需要执行的每一个步骤，然后将参数在 API 中暴露。`}</p>\n    </blockquote>\n    <p>{`简而言之，每一条规则由以下四个部分组成：`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`服务发现（Discovery）：告诉适配器如何找到这条规则涉及的所有参数。`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`关联（Association）：说明了参数与 Kubernetes 资源之间的关系，如参数 A 代表的是某个 Kubernetes 资源。`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`名称（Naming)：说明了适配器如何在自定义参数 API 中将特定的参数暴露出去。`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`查询（Querying）：说明了如何将查询 Kubernetes 参数的转换为 Prometheus 的查询语句。`}</p>\n      </li>\n    </ul>\n    <p>{`您可以参考下方的代码示例，查看如何配置只有一条规则的配置文件：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`rules:\n# this rule matches cumulative cAdvisor metrics measured in seconds\n- seriesQuery: '{__name__=~\"^container_.*\",container_name!=\"POD\",namespace!=\"\",pod_name!=\"\"}'\n  resources:\n    # skip specifying generic resource<->label mappings, and just\n    # attach only pod and namespace resources by mapping label names to group-resources\n    overrides:\n      namespace: {resource: \"namespace\"},\n      pod_name: {resource: \"pod\"},\n  # specify that the \\`container_\\` and \\`_seconds_total\\` suffixes should be removed.\n  # this also introduces an implicit filter on metric family names\n  name:\n    # we use the value of the capture group implicitly as the API name\n    # we could also explicitly write \\`as: \"$1\"\\`\n    matches: \"^container_(.*)_seconds_total$\"\n  # specify how to construct a query to fetch samples for a given series\n  # This is a Go template where the \\`.Series\\` and \\`.LabelMatchers\\` string values\n  # are availabel, and the delimiters are \\`<<\\` and \\`>>\\` to avoid conflicts with\n  # the prometheus query language\n  metricsQuery: \"sum(rate(<<.Series>>{<<.LabelMatchers>>,container_name!=\"POD\"}[2m])) by (<<.GroupBy>>)\"\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"服务发现（discovery）\"\n    }}>{`服务发现（Discovery）`}</h3>\n    <p>{`服务发现（Discovery）指定需要处理的 Prometheus 的参数，通过`}<inlineCode parentName=\"p\">{`seriesQuery`}</inlineCode>{`挑选需要处理的参数集合，通过`}<inlineCode parentName=\"p\">{`seriesFilters`}</inlineCode>{`精确过滤参数。`}<inlineCode parentName=\"p\">{`seriesQuery`}</inlineCode>{`用于挑选需要处理的参数集合。Prometheus 参数适配器会使用该机器的标签信息，后续还会用到 “metric-name-label-names”。`}</p>\n    <p><inlineCode parentName=\"p\">{`seriesFilters`}</inlineCode>{`用于精确过滤参数。在大部分情况下，过滤参数只需要用到`}<inlineCode parentName=\"p\">{`seriesQuery`}</inlineCode>{`。但是当两条规则的关系不为互斥时，需要同时使用`}<inlineCode parentName=\"p\">{`seriesFilters`}</inlineCode>{`和`}<inlineCode parentName=\"p\">{`seriesQuery`}</inlineCode>{`，以达到精确过滤的目的。首先通过`}<inlineCode parentName=\"p\">{`seriesQuery`}</inlineCode>{`查询，然后通过`}<inlineCode parentName=\"p\">{`seriesFilters`}</inlineCode>{`过滤返回信息。`}</p>\n    <p><inlineCode parentName=\"p\">{`seriesFilters`}</inlineCode>{`提供了以下两个过滤方式：`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`is: <regex>`}</inlineCode>{`，返回名称和`}<inlineCode parentName=\"p\">{`<regex>`}</inlineCode>{`中的字符串匹配的 series。`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`isNot: <regex>`}</inlineCode>{`，返回名称和`}<inlineCode parentName=\"p\">{`<regex>`}</inlineCode>{`中的字符串不匹配的 series。`}</p>\n      </li>\n    </ul>\n    <p>{`例如：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# match all cAdvisor metrics that aren't measured in seconds\nseriesQuery: '{__name__=~\"^container_.*_total\",container_name!=\"POD\",namespace!=\"\",pod_name!=\"\"}'\nseriesFilters:\n  isNot: \"^container_.*_seconds_total\"\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"关联（association）\"\n    }}>{`关联（Association）`}</h3>\n    <p>{`关联负责的是设置 metric 与 kubernetes resources 的映射关系，`}<inlineCode parentName=\"p\">{`resources`}</inlineCode>{`控制这个过程。`}</p>\n    <p>{`有两种关联 Kubernetes 资源和参数的方式。在这两种方式中，标签（label）的值都会变成某个对象。`}</p>\n    <p>{`一种方式是基于标签名称指定匹配某些样式的名称。这可以通过`}<inlineCode parentName=\"p\">{`template`}</inlineCode>{`实现。样式通过 GO 模板指定，`}<inlineCode parentName=\"p\">{`Group`}</inlineCode>{`和`}<inlineCode parentName=\"p\">{`Resource`}</inlineCode>{`表示组合资源。系统会自动辨别是哪个组，所以您可能不会用到`}<inlineCode parentName=\"p\">{`Group`}</inlineCode>{`，例如：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# any label \\`kube_<group>_<resource>\\` becomes <group>.<resource> in Kubernetes\nresources:\n  template: \"kube_<<.Group>>_<<.Resource>>\"\n`}</code></pre>\n    <p>{`另一种方式是使用`}<inlineCode parentName=\"p\">{`overrides`}</inlineCode>{`指定匹配某些样式的名称，一个`}<inlineCode parentName=\"p\">{`overrides`}</inlineCode>{`可以指定一种 Prometheus label 和 Kubernetes 资源的映射关系，例如：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# the microservice label corresponds to the apps.deployment resource\nresource:\n  overrides:\n    microservice: { group: \"apps\", resource: \"deployment\" }\n`}</code></pre>\n    <p>{`上述两种方法没有互斥性，您可以在一条规则中同时使用这两种方法。使用第一种方法的目的是创建一个模板，使用第二种方式的目的是针对某些资源中的可能存在特例，可以使用该方式处理这些特例。`}</p>\n    <p>{`只要您有对应的标签，resource 可以指代 Kubernetes 集群中的任意资源。`}</p>\n    <h3 {...{\n      \"id\": \"命名（naming）\"\n    }}>{`命名（Naming）`}</h3>\n    <p>{`命名（Naming）用于将 prometheus metrics 名称转化为 custom metrics API 所使用的 metrics 名称，但不会改变其本身的 metric 名称，`}<inlineCode parentName=\"p\">{`name`}</inlineCode>{`控制这个过程。`}</p>\n    <p>{`命名是通过指定参数名称的模板，从 Prometheus name 提取 API name，然后将 name 转换为您指定的 name。`}</p>\n    <p>{`该名称的模板通过 `}<inlineCode parentName=\"p\">{`matches`}</inlineCode>{`指定，是一个正则表达式。如果没有指定特定的值，默认值为`}<inlineCode parentName=\"p\">{`.*`}</inlineCode>{`。`}</p>\n    <p>{`名称的转换通过 `}<inlineCode parentName=\"p\">{`as`}</inlineCode>{` 指定。您可以使用在`}<inlineCode parentName=\"p\">{`matches`}</inlineCode>{`提到任何捕获组（capture group）。如果`}<inlineCode parentName=\"p\">{`matches`}</inlineCode>{`没有捕获组，`}<inlineCode parentName=\"p\">{`as`}</inlineCode>{`的默认值为`}<inlineCode parentName=\"p\">{`$0`}</inlineCode>{`。如果`}<inlineCode parentName=\"p\">{`matches`}</inlineCode>{`有 1 个捕获组，`}<inlineCode parentName=\"p\">{`as`}</inlineCode>{`的默认值为`}<inlineCode parentName=\"p\">{`$1`}</inlineCode>{`。如果`}<inlineCode parentName=\"p\">{`matches`}</inlineCode>{`有 2 个或更多的捕获组，您必须指定`}<inlineCode parentName=\"p\">{`as`}</inlineCode>{`的值。`}</p>\n    <p>{`例如：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# match turn any name <name>_total to <name>_per_second\n# e.g. http_requests_total becomes http_requests_per_second\nname:\n  matches: \"^(.*)_total$\"\n  as: \"\\${1}_per_second\"\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"查询（querying）\"\n    }}>{`查询（Querying）`}</h3>\n    <p>{`处理调用 custom metrics API 获取到的 metrics 的 value，该值最终提供给 HPA 进行扩缩容，通过 `}<inlineCode parentName=\"p\">{`metricsQuery`}</inlineCode>{`指定。`}</p>\n    <p><inlineCode parentName=\"p\">{`metricsQuery`}</inlineCode>{`是一个 GO 模板，它会转化为一个 Prometheus 查询语句，使用 custom\nmetrics API 调用的某个特定 call。一个给定的 call 会被分解为 metric name、组资源和一个或多个组资源内的对象。这些参数会被转换成以下格式：`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Series`}</inlineCode>{`: metric name，参数名称`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`LabelMatchers`}</inlineCode>{`: 以逗号分割的 objects，当前表示特定 group-resource 加上命名空间的 label(如果该 group-resource 是 namespaced 的)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GroupBy`}</inlineCode>{`: 以逗号分割的 label 的集合，当前表示 LabelMatchers 中的 group-resource label。当前`}<inlineCode parentName=\"li\">{`GroupBy`}</inlineCode>{`包含`}<inlineCode parentName=\"li\">{`LabelMatchers`}</inlineCode>{`内的所有组资源 label。`}</li>\n    </ul>\n    <p>{`假设我们有一个 series，`}<inlineCode parentName=\"p\">{`http_requests_total`}</inlineCode>{` （以`}<inlineCode parentName=\"p\">{`http_requests_per_second`}</inlineCode>{` 在 API 中暴露），有`}<inlineCode parentName=\"p\">{`service`}</inlineCode>{`、`}<inlineCode parentName=\"p\">{`pod`}</inlineCode>{`、\n`}<inlineCode parentName=\"p\">{`ingress`}</inlineCode>{`、`}<inlineCode parentName=\"p\">{`namespace`}</inlineCode>{`和`}<inlineCode parentName=\"p\">{`verb`}</inlineCode>{`这几个 label。前四个 label 有对应的 Kubernetes 资源。如果有人请求了`}<inlineCode parentName=\"p\">{`pod1`}</inlineCode>{`和`}<inlineCode parentName=\"p\">{`pod2`}</inlineCode>{`的参数`}<inlineCode parentName=\"p\">{`pods/http_request_per_second`}</inlineCode>{`，我们会有如下的代码：`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Series: \"http_requests_total\"`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`LabelMatchers: \"pod=~\\\\\"pod1|pod2\",namespace=\"somens\"`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GroupBy`}</inlineCode>{`: `}<inlineCode parentName=\"li\">{`pod`}</inlineCode></li>\n    </ul>\n    <p>{`除了以上三个域之外，还有两个域`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`LabelValuesByName`}</inlineCode>{`：`}<inlineCode parentName=\"p\">{`LabelMatchers`}</inlineCode>{` 中 label 和 value 的映射。使用`}<inlineCode parentName=\"p\">{`|`}</inlineCode>{`预连接（Prometheus 使用的是`}<inlineCode parentName=\"p\">{`=~`}</inlineCode>{`）。`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`GroupBySlice`}</inlineCode>{`：`}<inlineCode parentName=\"p\">{`GroupBy`}</inlineCode>{`的一个子集。`}</p>\n      </li>\n    </ul>\n    <p>{`大多数情况下，您只会用到 `}<inlineCode parentName=\"p\">{`Series`}</inlineCode>{`、`}<inlineCode parentName=\"p\">{`LabelMatchers`}</inlineCode>{`、和`}<inlineCode parentName=\"p\">{`GroupBy`}</inlineCode>{`，其他两个是高级选项。`}</p>\n    <p>{`这个查询语句应该为每个请求对象返回一个值。适配器会使用返回 series 的 labels 关联对应的对象。`}</p>\n    <p>{`例如：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# convert cumulative cAdvisor metrics into rates calculated over 2 minutes\nmetricsQuery: \"sum(rate(<<.Series>>{<<.LabelMatchers>>,container_name!=\"POD\"}[2m])) by (<<.GroupBy>>)\"\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}