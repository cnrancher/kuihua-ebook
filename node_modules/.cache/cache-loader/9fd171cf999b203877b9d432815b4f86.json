{"remainingRequest":"/Users/zhen/Documents/doc-zhen/kuihua-ebook-new/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/zhen/Documents/doc-zhen/kuihua-ebook-new/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/zhen/Documents/doc-zhen/kuihua-ebook-new/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/zhen/Documents/doc-zhen/kuihua-ebook-new/docs/rke/config-options/add-ons/ingress-controllers/_index.md","dependencies":[{"path":"/Users/zhen/Documents/doc-zhen/kuihua-ebook-new/docs/rke/config-options/add-ons/ingress-controllers/_index.md","mtime":1609137490847},{"path":"/Users/zhen/Documents/doc-zhen/kuihua-ebook-new/.docusaurus/docusaurus-plugin-content-docs/site-docs-rke-config-options-add-ons-ingress-controllers-index-md-436.json","mtime":1609140041479},{"path":"/Users/zhen/Documents/doc-zhen/kuihua-ebook-new/node_modules/cache-loader/dist/cjs.js","mtime":1609137482435},{"path":"/Users/zhen/Documents/doc-zhen/kuihua-ebook-new/node_modules/babel-loader/lib/index.js","mtime":1609137488105},{"path":"/Users/zhen/Documents/doc-zhen/kuihua-ebook-new/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1609137487644},{"path":"/Users/zhen/Documents/doc-zhen/kuihua-ebook-new/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1609137487714}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/zhen/Documents/doc-zhen/kuihua-ebook-new/docs/rke/config-options/add-ons/ingress-controllers/_index.md"],"names":["React","mdx","frontMatter","title","metadata","rightToc","value","id","children","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\ttitle: 'K8s Ingress Controllers'\n};\nexport const metadata = {\n  \"id\": \"rke/config-options/add-ons/ingress-controllers/_index\",\n  \"title\": \"K8s Ingress Controllers\",\n  \"description\": \"默认情况下，RKE 会在所有可调度节点上部署 NGINX ingress controller。\",\n  \"source\": \"@site/docs/rke/config-options/add-ons/ingress-controllers/_index.md\",\n  \"permalink\": \"/docs/rke/config-options/add-ons/ingress-controllers/_index\",\n  \"editUrl\": \"https://github.com/cnrancher/docs-rancher2/edit/master/docs/rke/config-options/add-ons/ingress-controllers/_index.md\",\n  \"lastUpdatedBy\": \"Author\",\n  \"lastUpdatedAt\": 1539502055\n};\n  /* @jsx mdx */\n\nexport const rightToc = [{\n  value: '调度 Ingress Controller',\n  id: '调度-ingress-controller',\n  children: []\n}, {\n  value: '禁用默认 Ingress Controller',\n  id: '禁用默认-ingress-controller',\n  children: []\n}, {\n  value: '配置 NGINX Ingress Controller',\n  id: '配置-nginx-ingress-controller',\n  children: []\n}, {\n  value: '配置 NGINX 默认证书',\n  id: '配置-nginx-默认证书',\n  children: []\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`默认情况下，RKE 会在所有可调度节点上部署 NGINX ingress controller。`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`说明：`}</strong>{` 从 v0.1.8 开始，只有 worker 节点是可调度节点，但在 v0.1.8 之前， worker 节点和 controlplane 节点都是是可调度节点。`}</p>\n    </blockquote>\n    <p>{`RKE 将以 DaemonSet 的形式部署 Ingress Controller，并使用 `}<inlineCode parentName=\"p\">{`hostnetwork: true`}</inlineCode>{`，因此在部署控制器的每个节点上都会打开 `}<inlineCode parentName=\"p\">{`80`}</inlineCode>{`和`}<inlineCode parentName=\"p\">{`443`}</inlineCode>{`端口。`}</p>\n    <p>{`Ingress Controller 使用的镜像在`}<a parentName=\"p\" {...{\n        \"href\": \"/docs/rke/config-options/system-images/_index\"\n      }}>{`系统镜像`}</a>{`中。对于每个 Kubernetes 版本，都有与 Ingress Controller 相关联的默认镜像，这些镜像可以通过更改`}<inlineCode parentName=\"p\">{`system_images`}</inlineCode>{`中的镜像标签来覆盖默认设置。`}</p>\n    <h2 {...{\n      \"id\": \"调度-ingress-controller\"\n    }}>{`调度 Ingress Controller`}</h2>\n    <p>{`如果只想在特定的节点上部署 Ingress Controller ，可以在`}<inlineCode parentName=\"p\">{`dns`}</inlineCode>{`部分设置一个`}<inlineCode parentName=\"p\">{`node_selector`}</inlineCode>{`。`}<inlineCode parentName=\"p\">{`node_selector`}</inlineCode>{`中的标签需要与要部署 Ingress Controller 的节点上的标签相匹配。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`nodes:\n  - address: 1.1.1.1\n    role: [controlplane, worker, etcd]\n    user: root\n    labels:\n      app: ingress\n\ningress:\n  provider: nginx\n  node_selector:\n    app: ingress\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"禁用默认-ingress-controller\"\n    }}>{`禁用默认 Ingress Controller`}</h2>\n    <p>{`您可以在集群配置中的 Ingress`}<inlineCode parentName=\"p\">{`provider`}</inlineCode>{`设置为`}<inlineCode parentName=\"p\">{`none`}</inlineCode>{`，禁用默认的 Ingress Controller。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`ingress:\n  provider: none\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"配置-nginx-ingress-controller\"\n    }}>{`配置 NGINX Ingress Controller`}</h2>\n    <p>{`Kubernetes 中有 NGINX 选项：`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/configmap.md\"\n      }}>{`NGINX 配置图的选项列表`}</a>{`、`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/cli-arguments.md\"\n      }}>{`命令行 extra_args`}</a>{`和`}<a parentName=\"p\" {...{\n        \"href\": \"https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/\"\n      }}>{`注释`}</a>{`。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`ingress:\n  provider: nginx\n  options:\n    map-hash-bucket-size: \"128\"\n    ssl-protocols: SSLv2\n  extra_args:\n    enable-ssl-passthrough: \"\"\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"配置-nginx-默认证书\"\n    }}>{`配置 NGINX 默认证书`}</h2>\n    <p>{`在配置具有 TLS 终止功能的 ingress 对象时，必须为其提供用于加密/解密的证书。与其在每次配置 ingress 时明确定义证书，不如设置一个默认使用的自定义证书。`}</p>\n    <p>{`在使用通配符证书的环境中，设置默认证书特别有用，因为该证书可以应用在多个子域中。`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`先决条件`}</strong></p>\n      <ul parentName=\"blockquote\">\n        <li parentName=\"ul\">{`访问用于创建集群的`}<inlineCode parentName=\"li\">{`cluster.yml`}</inlineCode>{`。`}</li>\n        <li parentName=\"ul\">{`你将使用的 PEM 编码证书作为默认证书。`}</li>\n      </ul>\n    </blockquote>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`获取或生成 PEM 编码形式的证书密钥对。`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`运行以下命令，从你的 PEM 编码证书中生成一个 Kubernetes 密钥，用`}<inlineCode parentName=\"p\">{`mycert.cert`}</inlineCode>{`和`}<inlineCode parentName=\"p\">{`mycert.key`}</inlineCode>{`代替你的证书。`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`kubectl -n ingress-nginx create secret tls ingress-default-cert --cert=mycert.cert --key=mycert.key -o yaml --dry-run=true > ingress-default-cert.yaml\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`将 `}<inlineCode parentName=\"p\">{`ingress-default-cert.yml`}</inlineCode>{`的内容嵌入到 RKE 的`}<inlineCode parentName=\"p\">{`cluster.yml`}</inlineCode>{`文件中：`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-yaml\"\n          }}>{`addons: |-\n  ---\n  apiVersion: v1\n  data:\n    tls.crt: [ENCODED CERT]\n    tls.key: [ENCODED KEY]\n  kind: Secret\n  metadata:\n    creationTimestamp: null\n    name: ingress-default-cert\n    namespace: ingress-nginx\n  type: kubernetes.io/tls\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`用下面的`}<inlineCode parentName=\"p\">{`default-ssl-certificate`}</inlineCode>{`参数定义你的 ingress 资源，它引用了我们之前在`}<inlineCode parentName=\"p\">{`cluster.yml`}</inlineCode>{`中`}<inlineCode parentName=\"p\">{`extra_args`}</inlineCode>{`下创建的密钥。`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-yaml\"\n          }}>{`ingress:\n  provider: \"nginx\"\n  extra_args:\n    default-ssl-certificate: \"ingress-nginx/ingress-default-cert\"\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`可选：`}</strong>{` 如果想将默认证书应用到已经存在的集群中的入口，必须删除 NGINX 入口控制器 pods，让 Kubernetes 使用新配置的`}<inlineCode parentName=\"p\">{`extra_args`}</inlineCode>{`调度新的 pods。`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`kubectl delete pod -l app=ingress-nginx -n ingress-nginx\n`}</code></pre>\n      </li>\n    </ol>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}